{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/empleado.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\n\nfunction CreateEmpleadosComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CreateEmpleadosComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"TODOS LOS CAMPOS SON OBLIGATORIOS\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let CreateEmpleadosComponent = /*#__PURE__*/(() => {\n  class CreateEmpleadosComponent {\n    constructor(fb, _empleadoSevice, router, toastr, aRoute) {\n      this.fb = fb;\n      this._empleadoSevice = _empleadoSevice;\n      this.router = router;\n      this.toastr = toastr;\n      this.aRoute = aRoute;\n      this.submitted = false;\n      this.loading = false;\n      this.titulo = 'Agregar Empleado';\n      this.createEmpleado = this.fb.group({\n        nombre: ['', Validators.required],\n        apellido: ['', Validators.required],\n        cedula: ['', Validators.required],\n        salario: ['', Validators.required]\n      });\n      this.id = this.aRoute.snapshot.paramMap.get('id');\n      console.log(this.id);\n    }\n\n    ngOnInit() {\n      this.esEditar();\n    }\n\n    agregarEditarEmpleado() {\n      this.submitted = true;\n\n      if (this.createEmpleado.invalid) {\n        return;\n      }\n\n      if (this.id === null) {\n        this.agregarEmpleado();\n      } else {\n        this.editarEmpleado(this.id);\n      }\n    }\n\n    agregarEmpleado() {\n      const empleado = {\n        nombre: this.createEmpleado.value.nombre,\n        apellido: this.createEmpleado.value.apellido,\n        cedula: this.createEmpleado.value.cedula,\n        salario: this.createEmpleado.value.salario,\n        fechaCreacion: new Date(),\n        fechaActualizacion: new Date()\n      };\n      this.loading = true;\n\n      this._empleadoSevice.agregarEmpleado(empleado).then(() => {\n        this.toastr.success('Empleado registrado exitosamente', 'Empleado Registrado!', {\n          positionClass: 'toast-bottom-right'\n        });\n        this.loading = false;\n        this.router.navigate(['/list-empleados']);\n      }).catch(error => {\n        console.log(error);\n        this.loading = false;\n      });\n    }\n\n    editarEmpleado(id) {\n      const empleado = {\n        nombre: this.createEmpleado.value.nombre,\n        apellido: this.createEmpleado.value.apellido,\n        cedula: this.createEmpleado.value.cedula,\n        salario: this.createEmpleado.value.salario,\n        fechaActualizacion: new Date()\n      };\n      this.loading = true;\n\n      this._empleadoSevice.actualizarEmpleado(id, empleado).then(() => {\n        this.loading = false;\n        this.toastr.info('Los datos del Empleado fueron actulizado exitosamente', 'Empleado Modificado!', {\n          positionClass: 'toast-bottom-right'\n        });\n        this.router.navigate(['/list-empleados']);\n      });\n    }\n\n    esEditar() {\n      if (this.id !== null) {\n        this.loading = true;\n        this.titulo = 'Editar Empleado';\n\n        this._empleadoSevice.getEmpleado(this.id).subscribe(data => {\n          this.loading = false;\n          this.createEmpleado.setValue({\n            nombre: data.payload.data()['nombre'],\n            apellido: data.payload.data()['apellido'],\n            cedula: data.payload.data()['cedula'],\n            salario: data.payload.data()['salario']\n          });\n        });\n      }\n    }\n\n  }\n\n  CreateEmpleadosComponent.ɵfac = function CreateEmpleadosComponent_Factory(t) {\n    return new (t || CreateEmpleadosComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmpleadoService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  CreateEmpleadosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateEmpleadosComponent,\n    selectors: [[\"app-create-empleados\"]],\n    decls: 22,\n    vars: 4,\n    consts: [[1, \"container\", \"pt-4\"], [1, \"row\"], [1, \"col-lg-6\", \"offset-lg-3\"], [1, \"card\", \"text-center\"], [1, \"card-body\"], [1, \"text-center\"], [\"class\", \"spinner-border float-end\", \"role\", \"status\", 4, \"ngIf\"], [\"class\", \"badge bg-danger\", 4, \"ngIf\"], [1, \"mt-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col\"], [\"type\", \"text\", \"formControlName\", \"nombre\", \"placeholder\", \"Nombre\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"text\", \"formControlName\", \"apellido\", \"placeholder\", \"Apellido\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"text\", \"formControlName\", \"cedula\", \"placeholder\", \"C\\u00E9dula\", 1, \"form-control\", \"form-control-lg\", \"mt-3\"], [\"type\", \"number\", \"formControlName\", \"salario\", \"placeholder\", \"Salario\", 1, \"form-control\", \"form-control-lg\", \"mt-3\"], [1, \"mt-3\"], [\"type\", \"text\", \"routerLink\", \"/list-empleado\", \"routerLinkActive\", \"router-link-active\", 1, \"button\", \"btn\", \"btn-secondary\", \"btn-lg\", \"me-3\"], [\"type\", \"submit\", 1, \"button\", \"btn\", \"btn-dark\", \"btn-lg\"], [\"role\", \"status\", 1, \"spinner-border\", \"float-end\"], [1, \"visually-hidden\"], [1, \"badge\", \"bg-danger\"]],\n    template: function CreateEmpleadosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"h3\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵtemplate(7, CreateEmpleadosComponent_div_7_Template, 3, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, CreateEmpleadosComponent_span_8_Template, 2, 0, \"span\", 7);\n        i0.ɵɵelementStart(9, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateEmpleadosComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.agregarEditarEmpleado();\n        });\n        i0.ɵɵelementStart(10, \"div\", 1);\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵelement(14, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 12);\n        i0.ɵɵelement(16, \"input\", 13);\n        i0.ɵɵelementStart(17, \"div\", 14);\n        i0.ɵɵelementStart(18, \"button\", 15);\n        i0.ɵɵtext(19, \"Volver\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 16);\n        i0.ɵɵtext(21, \"Agregar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"\", ctx.titulo, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.createEmpleado.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.createEmpleado);\n      }\n    },\n    directives: [i5.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NumberValueAccessor, i3.RouterLink, i3.RouterLinkActive],\n    styles: [\"\"]\n  });\n  return CreateEmpleadosComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}